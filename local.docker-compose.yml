services:
  db:
    image: public.ecr.aws/docker/library/postgres:16-alpine
    container_name: db
    environment:
      POSTGRES_USER: app
      POSTGRES_PASSWORD: app
      POSTGRES_DB: appdb
    ports:
      - "5432:5432"
    volumes:
      - db_data:/var/lib/postgresql/data:Z

  app:
    build: { context: . }
    container_name: app
    working_dir: /app
    user: root
    ports:
      - "8080:8080"
    command: sh -lc "sh ./gradlew bootRun --no-daemon"
    environment:
      GRADLE_USER_HOME: /tmp/gradle
      SPRING_DATASOURCE_URL: jdbc:postgresql://db:5432/appdb
      SPRING_DATASOURCE_USERNAME: app
      SPRING_DATASOURCE_PASSWORD: app
    depends_on:
      - db
      - minio
    volumes:
      - ./:/app
      - gradle_project:/app/.gradle
      - gradle_cache:/tmp/gradle

  minio:
    image: public.ecr.aws/bitnami/minio:latest
    container_name: minio
    command: server /data --console-address ":9001"
    environment:
      MINIO_ROOT_USER: ${MINIO_ROOT_USER:-kopi}
      MINIO_ROOT_PASSWORD: ${MINIO_ROOT_PASSWORD:-passwordkopi}
    ports:
      - "9000:9000"
      - "9001:9001"
    volumes:
      - minio_data:/data

  prometheus:
    image: public.ecr.aws/bitnami/prometheus:latest
    container_name: prometheus
    ports:
      - "9090:9090"
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
    restart: unless-stopped

  grafana:
     image: public.ecr.aws/bitnami/grafana:latest
     container_name: grafana
     ports:
       - "3000:3000"
     restart: unless-stopped

volumes:
  db_data:
  gradle_project:
  gradle_cache:
  minio_data: